import 'package:hive/hive.dart';

part 'expense_model.g.dart';

@HiveType(typeId: 3)
class ExpenseModel extends HiveObject {
  @HiveField(0)
  late String id;

  @HiveField(1)
  late String name;

  @HiveField(2)
  late double amount;

  @HiveField(3)
  late String category; // materials, rent, marketing, other

  @HiveField(4)
  late DateTime date;

  @HiveField(5)
  String? notes;

  @HiveField(6)
  late DateTime createdAt;

  ExpenseModel({
    required this.id,
    required this.name,
    required this.amount,
    required this.category,
    required this.date,
    this.notes,
    DateTime? createdAt,
  }) : createdAt = createdAt ?? DateTime.now();

  // –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞—Å—Ö–æ–¥
  factory ExpenseModel.create({
    required String name,
    required double amount,
    required String category,
    required DateTime date,
    String? notes,
  }) {
    return ExpenseModel(
      id: DateTime.now().millisecondsSinceEpoch.toString(),
      name: name,
      amount: amount,
      category: category,
      date: date,
      notes: notes,
      createdAt: DateTime.now(),
    );
  }

  // –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
  ExpenseModel copyWith({
    String? id,
    String? name,
    double? amount,
    String? category,
    DateTime? date,
    String? notes,
    DateTime? createdAt,
  }) {
    return ExpenseModel(
      id: id ?? this.id,
      name: name ?? this.name,
      amount: amount ?? this.amount,
      category: category ?? this.category,
      date: date ?? this.date,
      notes: notes ?? this.notes,
      createdAt: createdAt ?? this.createdAt,
    );
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—É–º–º–∞
  String getFormattedAmount() {
    return '${amount.toStringAsFixed(0)} ‚ÇΩ';
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
  String getFormattedDate() {
    final months = [
      '—è–Ω–≤',
      '—Ñ–µ–≤',
      '–º–∞—Ä',
      '–∞–ø—Ä',
      '–º–∞–π',
      '–∏—é–Ω',
      '–∏—é–ª',
      '–∞–≤–≥',
      '—Å–µ–Ω',
      '–æ–∫—Ç',
      '–Ω–æ—è',
      '–¥–µ–∫'
    ];
    return '${date.day} ${months[date.month - 1]}';
  }

  @override
  String toString() {
    return 'ExpenseModel(id: $id, name: $name, amount: $amount, category: $category)';
  }
}

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
class ExpenseCategory {
  static const String materials = 'materials';
  static const String rent = 'rent';
  static const String marketing = 'marketing';
  static const String equipment = 'equipment';
  static const String education = 'education';
  static const String other = 'other';

  static const List<String> all = [
    materials,
    rent,
    marketing,
    equipment,
    education,
    other,
  ];

  static String getDisplayName(String category) {
    switch (category) {
      case materials:
        return '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã';
      case rent:
        return '–ê—Ä–µ–Ω–¥–∞';
      case marketing:
        return '–†–µ–∫–ª–∞–º–∞';
      case equipment:
        return '–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ';
      case education:
        return '–û–±—É—á–µ–Ω–∏–µ';
      case other:
        return '–ü—Ä–æ—á–µ–µ';
      default:
        return category;
    }
  }

  static String getIcon(String category) {
    switch (category) {
      case materials:
        return 'üé®';
      case rent:
        return 'üè†';
      case marketing:
        return 'üì±';
      case equipment:
        return 'üîß';
      case education:
        return 'üìö';
      case other:
        return 'üí∞';
      default:
        return 'üíµ';
    }
  }
}
